---
- name: Create Traefik Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_data_directory }}"
    - "{{ traefik_data_directory }}/letsencrypt"

- name: Template Traefik config.toml
  template:
    src: traefik.toml
    dest: "{{ traefik_data_directory }}/traefik.toml"
  register: template_config

# - name: Create the web network
#   docker_network:
#     name: traefik

- name: Traefik Docker Container
  docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    pull: true
    volumes:
      - "{{ traefik_data_directory }}/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "{{ traefik_data_directory }}/letsencrypt:/letsencrypt:rw"
      - "{{ traefik_log_directory }}/logs:/etc/traefik/logs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env: "{{ traefik_environment_variables }}"
    restart_policy: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - name: frontend
    memory: "{{ traefik_memory }}"
    recreate: "{{ template_config is changed }}"
    labels:
      traefik.enable:                                                "true"
      traefik.docker.network:                                        "frontend"
      traefik.http.routers.traefik.service:                          "traefik"
      traefik.http.routers.traefik.rule:                             "Host(`{{ traefik_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.services.traefik.loadbalancer.server.port:        "{{ traefik_port_ui }}"
      traefik.http.routers.traefik.tls.certresolver:                 "letsencrypt"
      traefik.http.routers.traefik.tls.domains[0].main:              "{{ ansible_nas_domain }}"
      traefik.http.routers.traefik.tls.domains[0].sans:              "*.{{ ansible_nas_domain }}"
      com.centurylinklabs.watchtower.enable:                         "{{ traefik_watchtower_traefik }}"


# "{{ traefik_secure_labels }}"
# traefik.http.routers.traefik.service:                          "traefik"